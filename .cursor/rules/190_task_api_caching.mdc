---
description: Task API caching strategies and performance optimization
globs:
  - "src/**/*.{ts,tsx}"
alwaysApply: true
---

- **Cache key design** – create consistent, predictable cache keys for task data.
- **Cache invalidation strategy** – invalidate cache when tasks are created, updated, or deleted.
- **HTTP cache headers** – set appropriate Cache-Control, ETag, and Last-Modified headers.
- **Response caching layers** – prepare for Redis or in-memory caching of frequent queries.
- **Cache warming patterns** – design patterns to pre-populate cache with common queries.
- **Cache-aside pattern** – implement read-through and write-around caching strategies.
- **TTL management** – set appropriate time-to-live values for different types of data.
